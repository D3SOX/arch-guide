import{_ as s,c as a,o,a as n}from"./app.fc7e8247.js";const A=JSON.parse('{"title":"Install Bootloader","description":"","frontmatter":{},"headers":[{"level":2,"title":"UEFI","slug":"uefi","link":"#uefi","children":[]},{"level":2,"title":"BIOS","slug":"bios","link":"#bios","children":[]}],"relativePath":"installation/install-bootloader.md","lastUpdated":1675091814000}'),l={name:"installation/install-bootloader.md"},e=n(`<h1 id="install-bootloader" tabindex="-1">Install Bootloader <a class="header-anchor" href="#install-bootloader" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When doing disk encryption, finish the steps on the <a href="/encryption/#adjust-linux-kernel-hooks">encryption page</a>. It will guide you back to the main installation when needed.</p></div><p>If you don&#39;t know which one you should use re-visit <a href="./live-setup#check-if-booted-in-bios-or-uefi">Live Setup/Check if booted in BIOS or UEFI</a></p><h2 id="uefi" tabindex="-1">UEFI <a class="header-anchor" href="#uefi" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pacman</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-S</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">grub</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">os-prober</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">efibootmgr</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dosfstools</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mtools</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">gptfdisk</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">fatresize</span></span>
<span class="line"><span style="color:#FFCB6B;">grub-install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--target=x86_64-efi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--bootloader-id=grub_uefi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--efi-directory=/boot/efi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--recheck</span></span>
<span class="line"><span style="color:#FFCB6B;">grub-mkconfig</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/boot/grub/grub.cfg</span></span>
<span class="line"></span></code></pre></div><h2 id="bios" tabindex="-1">BIOS <a class="header-anchor" href="#bios" aria-hidden="true">#</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pacman</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-S</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">grub</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">os-prober</span></span>
<span class="line"><span style="color:#FFCB6B;">grub-install</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--target=i386-pc</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--recheck</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/dev/sdX</span></span>
<span class="line"><span style="color:#FFCB6B;">grub-mkconfig</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-o</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/boot/grub/grub.cfg</span></span>
<span class="line"></span></code></pre></div>`,7),t=[e];function p(r,c,i,C,d,y){return o(),a("div",null,t)}const D=s(l,[["render",p]]);export{A as __pageData,D as default};
